name: Validate Knowledge Base Pages

on:
  permissions:
    contents: read
    statuses: write

  push:
    branches:
      - main  # Runs on every push to main
  pull_request_target:
    branches:
      - main  # Runs on PRs

jobs:
  validate_pages:
    name: Validate Markdown Pages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Status to Pending
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: "pending",
              context: "Page Validation",
              description: "Validating newly uploaded files...",
            });

      - name: Run Validation Script
        run: python .github/scripts/validate_pages.py  # Custom script to validate files

      - name: Set Status to Success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: "success",
              context: "Page Validation",
              description: "All pages are correctly formatted and hosted!",
            });

      - name: Set Status to Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: "failure",
              context: "Page Validation",
              description: "Validation failed! Check logs for issues.",
            });
